apiVersion: v1
data:
  genesis.block: 
kind: Secret
metadata:
  creationTimestamp: "2022-02-28T18:04:28Z"
  name: hlf-genesis
  namespace: orderer
  resourceVersion: "1157440"
  uid: b11a9f03-d3ac-45ae-b104-3df338260286
type: Opaque
