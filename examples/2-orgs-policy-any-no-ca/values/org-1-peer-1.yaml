organization:
  id: MyOrg1MSP
  name: MyOrg1

nginx-ingress:
  enabled: true
  controller:
    scope:
      enabled: true


hlf-ca:
  enabled: false
  caName: rcaOrg1
  host: network-org-1-peer-1-hlf-ca.org-1
  orderer:
    host: network-orderer-hlf-ca.orderer

hlf-ord:
  host: network-orderer-hlf-ord.orderer

hlf-peer:
  host: network-org-1-peer-1-hlf-peer.org-1
  peer:
    mspID: MyOrg1MSP
    gossip:
      externalEndpoint: network-org-1-peer-1-hlf-peer.org-1:7051
  discover-monitor:
    enabled: true


chaincodes:
  - name: mycc
    version: "1.0"
    src: https://github.com/SubstraFoundation/substra-chaincode/archive/master.tar.gz

appChannels:
  - channelName: mychannel
    organizations:
      - { org: MyOrg1, mspid: MyOrg1MSP, configUrl: network-org-1-peer-1-hlf-k8s-config-operator.org-1/config/configOrgWithAnchors.json }
      - { org: MyOrg2, mspid: MyOrg2MSP, configUrl: network-org-2-peer-1-hlf-k8s-config-operator.org-2/config/configOrgWithAnchors.json }
    policies: |-
      Readers:
          Type: ImplicitMeta
          Rule: "ANY Readers"
      Writers:
          Type: ImplicitMeta
          Rule: "ANY Writers"
      Admins:
          Type: ImplicitMeta
          Rule: "ANY Admins"

    chaincodePolicy: "OR('MyOrg1MSP.member','MyOrg2MSP.member')"
    chaincodeName: mycc
    chaincodeVersion: "1.0"

  - channelName: yourchannel
    organizations:
      - { org: MyOrg1, mspid: MyOrg1MSP, configUrl: network-org-1-peer-1-hlf-k8s-config-operator.org-1/config/configOrgWithAnchors.json }
      - { org: MyOrg2, mspid: MyOrg2MSP, configUrl: network-org-2-peer-1-hlf-k8s-config-operator.org-2/config/configOrgWithAnchors.json }
    policies: |-
      Readers:
          Type: ImplicitMeta
          Rule: "ANY Readers"
      Writers:
          Type: ImplicitMeta
          Rule: "ANY Writers"
      Admins:
          Type: ImplicitMeta
          Rule: "ANY Admins"

    chaincodePolicy: "OR('MyOrg1MSP.member','MyOrg2MSP.member')"
    chaincodeName: mycc
    chaincodeVersion: "1.0"


enrollments:
  creds:
    - { name: admin, secret: adminpwd, options: "--id.attrs hf.Registrar.Roles=client,hf.Registrar.Attributes=*,hf.Revoker=true,hf.GenCRL=true,admin=true:ecert,abac.init=true:ecert"}
    - { name: user, secret: pwd, options: "--id.type peer"}
  csrHost: network-org-1-peer-1-hlf-peer.org-1


toolbox:
  enabled: true

hooks:
  deleteSecrets:
    enabled: false
