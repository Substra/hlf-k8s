# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{- if index .Values "hlf-ord" "enabled" }}
{{- if .Values.genesis.generate }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "substra.fullname" . }}-genesis-operator
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/name: {{ template "substra.name" . }}-genesis-operator
    app.kubernetes.io/part-of: {{ template "substra.name" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
        app.kubernetes.io/name: {{ template "substra.name" . }}-genesis-operator
        app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "substra.name" . }}-genesis-operator
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "substra.fullname" . }}
      {{- if index $.Values "fabric-tools" "image" "pullImageSecret" }}
      imagePullSecrets:
        - name: {{ index $.Values "fabric-tools" "image" "pullImageSecret" }}
      {{- end }}
      containers:
      - name: fabric-tools
        image: {{ index $.Values "fabric-tools" "image" "repository" }}:{{ index $.Values "fabric-tools" "image" "tag" }}
        imagePullPolicy: "{{ index $.Values "fabric-tools" "image" "pullPolicy" }}"
        command: ['sh', '-c']
        args:
          - |
            while true; do

                ## Generate Genesis block
                until [ -f "genesis.block" ] ; do
                    printf "[DEBUG] Generating genesis block\n"
                    configtxgen -profile GenerateGenesis -channelID {{ .Values.systemChannel.name }} -outputBlock genesis.block --configPath /etc/hyperledger/fabric
                    sleep 1
                done

                ## Create genesis block kubernetes secret
                until kubectl get secret {{ .Values.secrets.genesis }} > /dev/null; do
                    printf "[DEBUG] Genesis block kubernetes secret not found, creating it now:\n"
                    kubectl create secret generic {{ .Values.secrets.genesis }} --from-file=genesis.block
                    sleep 1
                done

                printf "[DEBUG] All done. Looping...\n"
                sleep 10
            done
        env:
        - name: CORE_PEER_MSPCONFIGPATH
          value: /var/hyperledger/admin_msp
        - name: GODEBUG
          value: "netdns=go+1"
        volumeMounts:
        - mountPath: /etc/hyperledger/fabric
          name: fabric-config
          readOnly: true
        - mountPath: /var/hyperledger/msp/signcerts
          name: id-cert
        - mountPath: /var/hyperledger/msp/keystore
          name: id-key
        - mountPath: /var/hyperledger/msp/cacerts
          name: cacert
        - mountPath: /var/hyperledger/msp/tlscacerts
          name: cacert
        - mountPath: /var/hyperledger/msp/admincerts
          name: admin-cert
        - mountPath: /var/hyperledger/tls/server/pair
          name: tls
        - mountPath: /var/hyperledger/tls/server/cert
          name: tls-rootcert
        - mountPath: /var/hyperledger/tls/client/pair
          name: tls-client
        - mountPath: /var/hyperledger/tls/client/cert
          name: tls-clientrootcert
        - mountPath: /var/hyperledger/admin_msp/signcerts
          name: admin-cert
        - mountPath: /var/hyperledger/admin_msp/keystore
          name: admin-key
        - mountPath: /var/hyperledger/admin_msp/cacerts
          name: cacert
        - mountPath: /var/hyperledger/admin_msp/tlscacerts
          name: cacert
        - mountPath: /var/hyperledger/admin_msp/admincerts
          name: admin-cert
      volumes:
      - name: fabric-config
        configMap:
          name: {{ template "substra.fullname" . }}-fabric
      - name: id-cert
        secret:
          secretName: {{ index .Values "hlf-ord" "secrets" "ord" "cert" }}
      - name: id-key
        secret:
          secretName: {{ index .Values "hlf-ord" "secrets" "ord" "key" }}
      - name: cacert
        secret:
          secretName: {{ index .Values "hlf-ord" "secrets" "ord" "caCert" }}
      - name: tls
        secret:
          secretName: {{ index .Values "hlf-ord" "secrets" "ord" "tls" }}
      - name: tls-rootcert
        secret:
          secretName: {{ index .Values "hlf-ord" "secrets" "ord" "tlsRootCert" }}
      - name: tls-client
        secret:
          secretName: {{ index .Values "hlf-ord" "secrets" "ord" "tlsClient" }}
      - name: tls-clientrootcert
        secret:
          secretName: {{ index .Values "hlf-ord" "secrets" "ord" "tlsClientRootCert" }}
      - name: admin-cert
        secret:
          secretName: {{ index .Values "hlf-ord" "secrets" "adminCert" }}
      - name: admin-key
        secret:
          secretName: {{ index .Values "hlf-ord" "secrets" "adminKey" }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}
{{- end }}
