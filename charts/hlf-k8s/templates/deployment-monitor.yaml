# Copyright 2018 Owkin, inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{- range .Values.appChannels }}
{{- if and (index $.Values "hlf-ord" "enabled") (index $.Values "hlf-ord" "monitor" "enabled") }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "substra.fullname" $ }}-monitor-{{ .channelName }}
  labels:
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
    app.kubernetes.io/name: {{ template "substra.name" $ }}
spec:
  replicas: 1
  selector:
    matchLabels:
        app.kubernetes.io/name: {{ template "substra.name" $ }}-monitor-{{ .channelName }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "substra.name" $ }}-monitor-{{ .channelName }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
    spec:
      serviceAccountName: {{ template "substra.fullname" $ }}
      containers:
      - name: fabric-tools
        image: {{ $.Values.image.repository }}:{{ $.Values.image.tag }}
        command: ['sh', '-c']
        args:
          - |
            ## Update CA certs
            update-ca-certificates

            ## Check connection with the Orderer
            printf "[DEBUG] Testing the connection with the Orderer ({{ index $.Values "hlf-ord" "host" }}:{{ index $.Values "hlf-ord" "port" }})\n"
            until $(nc -z {{ index $.Values "hlf-ord" "host" }} {{ index $.Values "hlf-ord" "port" }}); do
              printf "[DEBUG] Orderer ({{ index $.Values "hlf-ord" "host" }}:{{ index $.Values "hlf-ord" "port" }}) is not reacheable, retry in 3s\n"
              sleep 3
            done

            while true; do

              printf "[DEBUG] System channel: {{ $.Values.systemChannel.name }}\n"

              peer channel fetch config systemChannel.block \
                -c {{ $.Values.systemChannel.name }} \
                -o {{ index $.Values "hlf-ord" "host" }}:{{ index $.Values "hlf-ord" "port" }} \
                --tls \
                --clientauth \
                --cafile /var/hyperledger/tls/server/cert/cacert.pem \
                --keyfile /var/hyperledger/tls/client/pair/tls.key \
                --certfile /var/hyperledger/tls/client/pair/tls.crt \
                > /tmp/out.txt 2>&1 || cat /tmp/out.txt

              configtxlator proto_decode --input systemChannel.block --type common.Block | jq '.data.data[0].payload.data.config.channel_group.groups.Consortiums.groups.SampleConsortium.groups | keys'

              printf "[DEBUG] Application channel: {{ .channelName }}\n"

              peer channel fetch config applicationChannel.block \
                -c {{ .channelName }} \
                -o {{ index $.Values "hlf-ord" "host" }}:{{ index $.Values "hlf-ord" "port" }} \
                --tls \
                --clientauth \
                --cafile /var/hyperledger/tls/server/cert/cacert.pem \
                --keyfile /var/hyperledger/tls/client/pair/tls.key \
                --certfile /var/hyperledger/tls/client/pair/tls.crt \
                > /tmp/out.txt 2>&1 || cat /tmp/out.txt

              configtxlator proto_decode --input applicationChannel.block --type common.Block | jq '.data.data[0].payload.data.config.channel_group.groups.Application.groups | keys'

              sleep 10
            done
        resources:
          {{- toYaml $.Values.resources | nindent 14 }}
        env:
        - name: CORE_PEER_MSPCONFIGPATH
          value: /var/hyperledger/admin_msp
        volumeMounts:
          - mountPath: /etc/hyperledger/fabric
            name: fabric-config
            readOnly: true
          - mountPath: /config
            name: system-organizations
            readOnly: true
          - mountPath: /var/hyperledger/msp/signcerts
            name: id-cert
          - mountPath: /var/hyperledger/msp/keystore
            name: id-key
          - mountPath: /var/hyperledger/msp/cacerts
            name: cacert
          - mountPath: /var/hyperledger/msp/tlscacerts
            name: cacert
          - mountPath: /var/hyperledger/msp/admincerts
            name: admin-cert
          - mountPath: /var/hyperledger/tls/server/pair
            name: tls
          - mountPath: /var/hyperledger/tls/server/cert
            name: tls-rootcert
          - mountPath: /var/hyperledger/tls/client/pair
            name: tls-client
          - mountPath: /var/hyperledger/tls/client/cert
            name: tls-clientrootcert
          - mountPath: /var/hyperledger/admin_msp/signcerts
            name: admin-cert
          - mountPath: /var/hyperledger/admin_msp/keystore
            name: admin-key
          - mountPath: /var/hyperledger/admin_msp/cacerts
            name: cacert
          - mountPath: /var/hyperledger/admin_msp/tlscacerts
            name: cacert
          - mountPath: /var/hyperledger/admin_msp/admincerts
            name: admin-cert
          {{- if $.Values.privateCa.enabled }}
          - mountPath: /usr/local/share/ca-certificates/{{ $.Values.privateCa.configMap.fileName }}
            name: private-ca
            subPath: {{ $.Values.privateCa.configMap.fileName }}
          {{- end }}
      volumes:
        - name: system-organizations
          configMap:
            name: {{ template "substra.fullname" $ }}-system-organizations
        - name: fabric-config
          configMap:
            name: {{ template "substra.fullname" $ }}-fabric
        - name: id-cert
          secret:
            secretName: {{ index $.Values "hlf-ord" "secrets" "ord" "cert" }}
        - name: id-key
          secret:
            secretName: {{ index $.Values "hlf-ord" "secrets" "ord" "key" }}
        - name: cacert
          secret:
            secretName: {{ index $.Values "hlf-ord" "secrets" "ord" "caCert" }}
        - name: tls
          secret:
            secretName: {{ index $.Values "hlf-ord" "secrets" "ord" "tls" }}
        - name: tls-rootcert
          secret:
            secretName: {{ index $.Values "hlf-ord" "secrets" "ord" "tlsRootCert" }}
        - name: tls-client
          secret:
            secretName: {{ index $.Values "hlf-ord" "secrets" "ord" "tlsClient" }}
        - name: tls-clientrootcert
          secret:
            secretName: {{ index $.Values "hlf-ord" "secrets" "ord" "tlsClientRootCert" }}
        - name: admin-cert
          secret:
            secretName: {{ index $.Values "hlf-ord" "secrets" "adminCert" }}
        - name: admin-key
          secret:
            secretName: {{ index $.Values "hlf-ord" "secrets" "adminKey" }}
        {{- if $.Values.privateCa.enabled }}
        - name: private-ca
          configMap:
            name: {{ $.Values.privateCa.configMap.name }}
        {{- end }}
    {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
---
{{- end }}


{{- if and (index $.Values "hlf-peer" "enabled") (index $.Values "hlf-peer" "discover-monitor" "enabled") }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "substra.fullname" $ }}-discover-monitor-{{ .channelName }}
  labels:
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
    app.kubernetes.io/name: {{ template "substra.name" $ }}
spec:
  replicas: 1
  selector:
    matchLabels:
        app.kubernetes.io/name: {{ template "substra.name" $ }}-discover-monitor-{{ .channelName }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "substra.name" $ }}-discover-monitor-{{ .channelName }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
    spec:
      serviceAccountName: {{ template "substra.fullname" $ }}
      containers:
      - name: fabric-tools
        image: {{ $.Values.image.repository }}:{{ $.Values.image.tag }}
        command: ['sh', '-c']
        args:
          - |
            ## Update CA certs
            update-ca-certificates

            while true; do
              printf "[DEBUG] Discover application channel: {{ .channelName }}\n"
              discover --configFile /etc/hyperledger/fabric/discoverConfig.yaml peers --channel {{ .channelName }} --server {{ index $.Values "hlf-peer" "host" }}:{{ index $.Values "hlf-peer" "port" }}
              sleep 10
            done
        resources:
          {{- toYaml $.Values.resources | nindent 14 }}
        env:
        - name: CORE_PEER_MSPCONFIGPATH
          value: /var/hyperledger/admin_msp
        volumeMounts:
          - mountPath: /etc/hyperledger/fabric
            name: fabric-config
            readOnly: true
          - mountPath: /var/hyperledger/msp/signcerts
            name: id-cert
          - mountPath: /var/hyperledger/msp/keystore
            name: id-key
          - mountPath: /var/hyperledger/msp/cacerts
            name: cacert
          - mountPath: /var/hyperledger/msp/tlscacerts
            name: cacert
          - mountPath: /var/hyperledger/msp/admincerts
            name: admin-cert
          - mountPath: /var/hyperledger/tls/server/pair
            name: tls
          - mountPath: /var/hyperledger/tls/server/cert
            name: tls-rootcert
          - mountPath: /var/hyperledger/tls/client/pair
            name: tls-client
          - mountPath: /var/hyperledger/tls/client/cert
            name: tls-clientrootcert
          - mountPath: /var/hyperledger/tls/ord/cert
            name: ord-tls-rootcert
          - mountPath: /var/hyperledger/admin_msp/signcerts
            name: admin-cert
          - mountPath: /var/hyperledger/admin_msp/keystore
            name: admin-key
          - mountPath: /var/hyperledger/admin_msp/cacerts
            name: cacert
          - mountPath: /var/hyperledger/admin_msp/tlscacerts
            name: cacert
          - mountPath: /var/hyperledger/admin_msp/admincerts
            name: admin-cert
          - mountPath: /data
            name: data
          {{- if $.Values.privateCa.enabled }}
          - mountPath: /usr/local/share/ca-certificates/{{ $.Values.privateCa.configMap.fileName }}
            name: private-ca
            subPath: {{ $.Values.privateCa.configMap.fileName }}
          {{- end }}
      volumes:
        - name: fabric-config
          configMap:
            name: {{ template "substra.fullname" $ }}-fabric
        - name: id-cert
          secret:
            secretName: {{ index $.Values "hlf-peer" "secrets" "peer" "cert" }}
        - name: id-key
          secret:
            secretName: {{ index $.Values "hlf-peer" "secrets" "peer" "key" }}
        - name: cacert
          secret:
            secretName: {{ index $.Values "hlf-peer" "secrets" "peer" "caCert" }}
        - name: tls
          secret:
            secretName: {{ index $.Values "hlf-peer" "secrets" "peer" "tls" }}
        - name: tls-rootcert
          secret:
            secretName: {{ index $.Values "hlf-peer" "secrets" "peer" "tlsRootCert" }}
        - name: tls-client
          secret:
            secretName: {{ index $.Values "hlf-peer" "secrets" "peer" "tlsClient" }}
        - name: tls-clientrootcert
          secret:
            secretName: {{ index $.Values "hlf-peer" "secrets" "peer" "tlsClientRootCert" }}
        - name: admin-cert
          secret:
            secretName: {{ index $.Values "hlf-peer" "secrets" "adminCert" }}
        - name: admin-key
          secret:
            secretName: {{ index $.Values "hlf-peer" "secrets" "adminKey" }}
        - name: ord-tls-rootcert
          secret:
            secretName: {{ $.Values.secrets.ordTlsRootCert }}
        - name: data
          emptyDir: {}
        {{- if $.Values.privateCa.enabled }}
        - name: private-ca
          configMap:
            name: {{ $.Values.privateCa.configMap.name }}
        {{- end }}
    {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
---
{{- end }}
{{- end }}
