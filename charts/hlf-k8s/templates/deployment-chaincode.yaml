{{- if index .Values "hlf-peer" "enabled" }}
{{- range  .Values.chaincodes }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "substra.fullname" $ }}-chaincode-{{ .name }}
  labels:
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
    app.kubernetes.io/name: {{ template "substra.name" $ }}-chaincode
    app.kubernetes.io/part-of: {{ template "substra.name" $ }}
spec:
  replicas: 1
  selector:
    matchLabels:
        app.kubernetes.io/name: {{ template "substra.name" $ }}-chaincode-{{ .name }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
        app.kubernetes.io/component: {{ template "substra.name" $ }}-chaincode
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "substra.name" $ }}-chaincode-{{ .name }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
        app.kubernetes.io/component: {{ template "substra.name" $ }}-chaincode
    spec:
      {{- if .image.pullImageSecret }}
      imagePullSecrets:
        - name: {{ .image.pullImageSecret }}
      {{- end }}
      {{- if .init }}
      initContainers:
        - name: substra-chaincode-{{ .name }}-init
          image: {{ .init.image.repository }}:{{ .init.image.tag }}
          imagePullPolicy: "{{ .image.pullPolicy }}"
          envFrom:
            - secretRef:
                name: {{ template "substra.fullname" $ }}-couchdb-credentials
          env:
            - name: CHAINCODE_NAME
              value: {{ .name }}
            - name: COUCHDB_INSTANCE

              value: {{ index $.Values "hlf-peer" "peer" "couchdbService" }}:{{ index $.Values "hlf-peer" "peer" "couchdbPort" }}
            - name: CHANNELS
              {{- $channels := list }}
              {{- $ccName := .name }}
              {{- range $.Values.appChannels }}
              {{- $channelChaincodes := list }}
              {{- range .chaincodes }}
              {{- $channelChaincodes = append $channelChaincodes .name }}
              {{- end }}
              {{- if has $ccName $channelChaincodes }}
              {{- $channels = append $channels .channelName }}
              {{- end }}
              {{- end }}
              value: {{ join "," $channels }}
      {{- end }}
      containers:
        - name: substra-chaincode-{{ .name }}
          image: {{ .image.repository }}:{{ .image.tag }}
          imagePullPolicy: "{{ .image.pullPolicy }}"
          command: ['./chaincode']
          env:
            - name: LOG_LEVEL
              value: DEBUG
            - name: CHAINCODE_CCID
              valueFrom:
                secretKeyRef:
                  name: chaincode-ccid-{{ .name }}-{{ .version }}
                  key: ccid
            - name: CHAINCODE_ADDRESS
              value: "0.0.0.0:{{ .port }}"
            - name: TLS_CERT_FILE
              value: "/var/hyperledger/tls/client/pair/tls.crt"
            - name: TLS_KEY_FILE
              value: "/var/hyperledger/tls/client/pair/tls.key"
            - name: TLS_ROOTCERT_FILE
              value: "/var/hyperledger/tls/client/cert/cacert.pem"
            {{- if .logLevel }}
            - name: LOG_LEVEL
              value: {{ .logLevel }}
            {{- end }}
          volumeMounts:
            - mountPath: /var/hyperledger/tls/client/pair
              name: tls-client
            - mountPath: /var/hyperledger/tls/client/cert
              name: tls-clientrootcert
          ports:
            - containerPort: {{ .port }}
      volumes:
      - name: tls-client
        secret:
          secretName: {{ $.Values.secrets.tlsClient }}
      - name: tls-clientrootcert
        secret:
          secretName: {{ $.Values.secrets.tlsClientRootCert }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "substra.fullname" $ }}-chaincode-{{ .name }}
  labels:
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
    app.kubernetes.io/name: {{ template "substra.name" $ }}-chaincode-{{ .name }}
spec:
  type: ClusterIP
  ports:
  - name: chaincode
    port: {{ .port }}
    protocol: TCP
    targetPort: {{ .port }}
  selector:
    app.kubernetes.io/name: {{ template "substra.name" $ }}-chaincode-{{ .name }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
{{- end }}
{{- end }}
